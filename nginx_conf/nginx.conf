#运行用户
#user  nobody;

#启动进程,通常设置成和cpu的数量相等
worker_processes  1;

#全局错误日志
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#PID文件，记录当前启动的nginx的进程ID
#pid        logs/nginx.pid;

#工作模式及连接数上限
events {
    worker_connections  1024;
}

#设定http服务器，利用它的反向代理功能提供负载均衡支持
http {
    #设定mime类型(邮件支持类型),类型由mime.types文件定义
    include       mime.types;
    default_type  application/octet-stream;

    #设定日志
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    #sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，对于普通应用，
    #必须设为 on,如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，
    #以平衡磁盘与网络I/O处理速度，降低系统的uptime.
    sendfile        on;
    #tcp_nopush     on;

    #连接超时时间
    #keepalive_timeout  0;
    keepalive_timeout  120;

    #gzip压缩开关
    #gzip  on;

    #设定实际的服务器列表 
    upstream zp_server1{
        server 127.0.0.1:8100;
        #server xx:80 可配置多台服务器做负载均衡 weight设置优先级
    }

    #反向代理
    #upstream ttp_server1{
    #    server xx:8001
    #}
    #upstream ttp_server2{
    #    server xx:8002
    #}
    #upstream ttp_server3{
    #    server xx:8003
    #}

    #HTTP服务器
    server {
        #监听端口 80是默认端口，配置80端口的话用户访问网址不用写端口号
        listen       80;
        #监听https端口 默认443
        #listen 443 ssl;

        #定义访问入口，默认localhost
        server_name  www.moekosu.com;

        #编码格式
        charset utf-8;
        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        #location / {
        #   root   html;
        #   #首页
        #   index  index.html index.htm;
        #}

        #https ssl证书配置
        #ssl证书文件位置(常见证书文件格式为：crt/pem)
        #ssl_certificate      cert.pem;
        #ssl证书key位置
        #ssl_certificate_key  cert.key;

        #ssl配置参数（选择性配置）
        #ssl_session_cache    shared:SSL:1m;
        #ssl_session_timeout  5m;
        #数字签名，此处使用MD5
        #ssl_ciphers  HIGH:!aNULL:!MD5;
        #ssl_prefer_server_ciphers  on;

        #代理配置参数
        proxy_connect_timeout 180;
        proxy_send_timeout 180;
        proxy_read_timeout 180;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarder-For $remote_addr;

        #反向代理的路径（和upstream绑定），location 后面设置映射的路径
        location / {
            proxy_pass http://zp_server1;
        }

        #假设这里反向代理的是后台应用，则包含enable-cors.conf配置，让前台可以跨域访问到
        #location /back {
        #    include enable-cors.conf;
        #    proxy_pass http://xx;
        #}

        #反向代理
        #location /xx1/ {
        #    proxy_pass http://ttp_server1;
        #}
        #location /xx2/ {
        #    proxy_pass http://ttp_server2;
        #}
        #location /xx3/ {
        #    proxy_pass http://ttp_server3;
        #}

        #静态文件，nginx自己处理
        #location ~ ^/(images|javascript|js|css|flash|media|static)/ {
        #    #文件路径
        #    root D:\01_Workspace\Project\github\zp\SpringNotes\spring-security\spring-shiro\src\main\webapp\views;
        #    #过期30天，静态文件不怎么更新，过期可以设大一点，如果频繁更新，则可以设置得小一点。
        #    expires 30d;
        #}

        #设定查看Nginx状态的地址
        location /NginxStatus {
            stub_status           on;
            access_log            on;
            auth_basic            "NginxStatus";
            auth_basic_user_file  conf/htpasswd;
        }

        #禁止访问 .htxxx 文件
        location ~ /\.ht {
            deny all;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        # 错误处理页面
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
